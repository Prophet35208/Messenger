Этап 1. Прототипы и планирование
Базовая реализация сервера была написана. Теперь нужно определится с интерфейсом клиента.

Неободимо создать поле, где будут находится сообщения пользователей. Это не должно быть простое текстовое поле, мне нужно выделять каждое сообщение как объект.
Делается это для того, чтобы можно было пересылать, изменять, копировать и выполнять другие операции над этим объектом. Сообщения должны быть кликабельны!.
1 вариант: ListView, в котором будут сообщения. Возможно надо будет добавить делегат.

Как оказалось, настройка этого элемента оказалось трудной задачей. К тому же примера я так и не нашёл. Пока что оставлю интерфейс в покое, продолжу развивать сервер.

Рассмотрим данные, хранимые на сервере. Это информация о пользователях в виде: id, логин и пароль. Чат: массив пользователей (если больше 2 то групповой) 
и массив сообщений (структура с int id и str текстом). Ешё добавим контакты: id пользователя и массив id его контактов. По идее это должно легко укладываться в таблицы.
Данные накидал. Теперь что я вообще передаю через сокеты. 
Список:
1. Хочу зарегаться (логин, пароль)
2. Хочу зайти (логин, пароль). После этого идёт передача инофрмации, а именно массив структуры чатов (массив пользовталей и массив сообщений) и массив id его контактов вместе с их именами
Можно ещё передать какой то код, который будет свидетельствовать о том, что человек теперь авторизован.
3. Хочу добавить контакт. Операция только для авторизованного. Передача логина на сервер. Сервер создаёт чат на вас двоих. Сервер возвращает "успех" или "не успех".
4. Хочу отправить сообщение. Серверу передаём id кому отправим и сообщение. Сервер получает и меняет свою БД, еслп удачно то возвращает ответ на клиент. Так же отправляет тому человеку сигнал.
5. Хочу создать групповой чат. Клиент условно пишет логины людей, переадёт их серверу. Он получает их id-шки из бд, далее создаёт чат. Отправляет данные о созданном чате всем клиентам, которые вступают в чат
Пока что хватит

Sqlite не поддерживет массивы. Попробуем такую схему таблица user: id, login, password. Табл чат: id и, внимание, некоторая структура, описывающая чат. Запихнуть её в бд как blob.
И ещё одна табл как соединение между user и чат: user_in_chat: id, user_id, chat_id.
Примерное содержание структуры: кол-во сообщений, массив сообщений (сообщение это id пользователя и текст (макс 300 символов на текст))

Со стркутурой определились. Сейчас нужно попробовать реализовать какое-нибудь лёгкое сетевое взаимодействие для того, чтобы лучше понять действие сокетов. Например регистрацию.
Клиент отсылает серверу сообщение. Текст вида "1$login$password"

31.05.2023.
В начале немного покапался в интерфейсе, попробовал парочку параметров. Закоммитил. Сейчас нужно полностью реализовать функционал регистрации и входа. 
Сейчас есть только вход и то с дебаг интерфейсом. 
Сначала сделаю интерфейс. Могу оставить одно окно, которое имеет 2 вида: вид регистрации и вид входа. Для этого при нажатии буду менять характеристики элементов интерфейса.
Теперь к логике. Предположительная структура такая:
	В начале все окна заблочены, есть кнопка соединения.
	Нажимаем кнопку, подсоединяемся к серверу, сервер даёт добро, что готов нас слушать (обрабатывать запросы на регистрацию и вход)
	Включаются кнопки на регистрацию и вход.

01.05.2023
	Нажимаем на кнопку регистрации, идёт смена режима и можем ввести данные.
	Нужно отправить даные на сервер. Отправим стркой вида "2$login$password". Клиент сам должен проверить соответствие паролей.

Важное замечание: нужно как то разделять передаваемые переменные, учитывая что они переменного размера. Для этого можно использовать некоторый знак разделитель. Допустим это будет $
Чтобы избежать ошибок важно в будущем, при обработке сообщений пользователей (этото знак может там быть), этот знак обрабатывать и недопускать при отправке данных на сервер!!!!

	Сервер принимает данные. Смотрит есть ли уже такой пользователь, если нет - то можно регистрироваться. Если да - то нет. 
	В любом случае отправляет код об успешной или провальной регистрации. Ранее уже использовали код -1 как ошибку и 1 как успех, тут можно так же. 
	Хотя нет, первый параметр может содержать огромные числа, поэтому определим новые коды для этого: 2 - ошибка, 3 - успех (возможно коды менее читабельны, но теперь их не перепутать)
	После принятия ответа от сервера клиент выводит соответствующее сообщение. 
Дописал всё что указал, получил более менее работающее окно регистрации и входа. Теперь нужно передать данные в клиент.

Нужно передать сокет 

Возвращаюсь к стркутуре в базе данных "сообщения" таблицы чат. Я не уверен будет ли это работать. Нужно проверить смогу ли я запихивать в БД эту структуру и после вытаскивать её.
Сделаю тест: передам в БД эту структуру и после достану её. В дебаге посмотрю содержимое.

02.05.2023
Какое то время я эксперементровал с передачей данных. Во первый, как оказалось, не обязательно придумывать вои разделители, они уже инкапсулированы, можно просто передавать несколько строк в поток как параметры.
Так же идея передавать структуру в БД кажется всё менее привлекательной. 
Сделаем так: добавим дополнительную таблицу с сообщениями. Она будет хранить сообщения: id - сообщения,  id отправителя, id - получателя (0, если нет, в будущем можно реализовать ответ на сообщения), текст сообщения.
Кроме того, нужно понимать структуру всех сообщений, они имеют порядок: одно идёт за другим. Т.е. можно реализовать связанный список для того, чтобы при удалении одного сообщения в середине не пришлось менять номера
сообщений сверху. Так же для чата можно ввести id  последнего сообщения, т.к. это единственная точка, откуда могуть появится следующие сообщения.
В любом случае, всё вышеописанное при реализации должно помочь сделать проект более гибким и готовым к добавлению новых фич. 

Отредактирую БД по заданному описанию.  У чата убираю столбец blob, добавляю int: id_last_message. 
Добавляю таблицу message со столбцами pk_message, pk_previous, pk_next, pk_user_sender, pk_ text. (пока без receivera)

Теперь было бы неплохо убрать тот костыль с $ и сделать передачу данных более красиво.После этого можно закоммитить (без тестов и экспериментов, там бардак).
Далее перейти к конкретике: например на клиенте добавить контакт и создать соответствующий чат.

03.05.2023
Начал реализацию добавления контакта. На сервер отправка кода 4 и строки с логином. Возвращяется сервером при удаче 3 параметра - 5, login кого добавить и id чата с ним.
В соответсвии с login-ом создаётся контакт в listView для контактов и соответствующий чат. Нужно придумать как хранить это на клиенте. На завтра оставлю дебаг, коммит сделан.
04.05.2023



